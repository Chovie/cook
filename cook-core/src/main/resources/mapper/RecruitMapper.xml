<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cook.dao.RecruitMapper" >
  <resultMap id="BaseResultMap" type="com.cook.entity.Recruit" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="salary" property="salary" jdbcType="VARCHAR" />
    <result column="recruit_people_num" property="recruitPeopleNum" jdbcType="INTEGER" />
    <result column="recruit_type" property="recruitType" jdbcType="SMALLINT" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="publish_date" property="publishDate" jdbcType="BIGINT" />
    <result column="apply_people_num" property="applyPeopleNum" jdbcType="INTEGER" />
    <result column="browse_count" property="browseCount" jdbcType="INTEGER" />
    <result column="publisher_id" property="publisherId" jdbcType="VARCHAR" />
    <result column="food_type_id" property="foodTypeId" jdbcType="VARCHAR" />
    <result column="welfare_id_list" property="welfareIdList" jdbcType="VARCHAR" />
    <result column="job_id" property="jobId" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="experience_require" property="experienceRequire" jdbcType="VARCHAR" />
    <result column="age_require" property="ageRequire" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, salary, recruit_people_num, recruit_type, description, publish_date, apply_people_num, 
    browse_count, publisher_id, food_type_id, welfare_id_list, job_id, education, experience_require, 
    age_require
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from recruit
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from recruit
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.cook.entity.Recruit" >
    insert into recruit (id, salary, recruit_people_num, 
      recruit_type, description, publish_date, 
      apply_people_num, browse_count, publisher_id, 
      food_type_id, welfare_id_list, job_id, 
      education, experience_require, age_require
      )
    values (#{id,jdbcType=VARCHAR}, #{salary,jdbcType=VARCHAR}, #{recruitPeopleNum,jdbcType=INTEGER}, 
      #{recruitType,jdbcType=SMALLINT}, #{description,jdbcType=VARCHAR}, #{publishDate,jdbcType=BIGINT}, 
      #{applyPeopleNum,jdbcType=INTEGER}, #{browseCount,jdbcType=INTEGER}, #{publisherId,jdbcType=VARCHAR}, 
      #{foodTypeId,jdbcType=VARCHAR}, #{welfareIdList,jdbcType=VARCHAR}, #{jobId,jdbcType=VARCHAR}, 
      #{education,jdbcType=VARCHAR}, #{experienceRequire,jdbcType=VARCHAR}, #{ageRequire,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cook.entity.Recruit" >
    insert into recruit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="salary != null" >
        salary,
      </if>
      <if test="recruitPeopleNum != null" >
        recruit_people_num,
      </if>
      <if test="recruitType != null" >
        recruit_type,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="publishDate != null" >
        publish_date,
      </if>
      <if test="applyPeopleNum != null" >
        apply_people_num,
      </if>
      <if test="browseCount != null" >
        browse_count,
      </if>
      <if test="publisherId != null" >
        publisher_id,
      </if>
      <if test="foodTypeId != null" >
        food_type_id,
      </if>
      <if test="welfareIdList != null" >
        welfare_id_list,
      </if>
      <if test="jobId != null" >
        job_id,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="experienceRequire != null" >
        experience_require,
      </if>
      <if test="ageRequire != null" >
        age_require,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="salary != null" >
        #{salary,jdbcType=VARCHAR},
      </if>
      <if test="recruitPeopleNum != null" >
        #{recruitPeopleNum,jdbcType=INTEGER},
      </if>
      <if test="recruitType != null" >
        #{recruitType,jdbcType=SMALLINT},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null" >
        #{publishDate,jdbcType=BIGINT},
      </if>
      <if test="applyPeopleNum != null" >
        #{applyPeopleNum,jdbcType=INTEGER},
      </if>
      <if test="browseCount != null" >
        #{browseCount,jdbcType=INTEGER},
      </if>
      <if test="publisherId != null" >
        #{publisherId,jdbcType=VARCHAR},
      </if>
      <if test="foodTypeId != null" >
        #{foodTypeId,jdbcType=VARCHAR},
      </if>
      <if test="welfareIdList != null" >
        #{welfareIdList,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null" >
        #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="experienceRequire != null" >
        #{experienceRequire,jdbcType=VARCHAR},
      </if>
      <if test="ageRequire != null" >
        #{ageRequire,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cook.entity.Recruit" >
    update recruit
    <set >
      <if test="salary != null" >
        salary = #{salary,jdbcType=VARCHAR},
      </if>
      <if test="recruitPeopleNum != null" >
        recruit_people_num = #{recruitPeopleNum,jdbcType=INTEGER},
      </if>
      <if test="recruitType != null" >
        recruit_type = #{recruitType,jdbcType=SMALLINT},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null" >
        publish_date = #{publishDate,jdbcType=BIGINT},
      </if>
      <if test="applyPeopleNum != null" >
        apply_people_num = #{applyPeopleNum,jdbcType=INTEGER},
      </if>
      <if test="browseCount != null" >
        browse_count = #{browseCount,jdbcType=INTEGER},
      </if>
      <if test="publisherId != null" >
        publisher_id = #{publisherId,jdbcType=VARCHAR},
      </if>
      <if test="foodTypeId != null" >
        food_type_id = #{foodTypeId,jdbcType=VARCHAR},
      </if>
      <if test="welfareIdList != null" >
        welfare_id_list = #{welfareIdList,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null" >
        job_id = #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="experienceRequire != null" >
        experience_require = #{experienceRequire,jdbcType=VARCHAR},
      </if>
      <if test="ageRequire != null" >
        age_require = #{ageRequire,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cook.entity.Recruit" >
    update recruit
    set salary = #{salary,jdbcType=VARCHAR},
      recruit_people_num = #{recruitPeopleNum,jdbcType=INTEGER},
      recruit_type = #{recruitType,jdbcType=SMALLINT},
      description = #{description,jdbcType=VARCHAR},
      publish_date = #{publishDate,jdbcType=BIGINT},
      apply_people_num = #{applyPeopleNum,jdbcType=INTEGER},
      browse_count = #{browseCount,jdbcType=INTEGER},
      publisher_id = #{publisherId,jdbcType=VARCHAR},
      food_type_id = #{foodTypeId,jdbcType=VARCHAR},
      welfare_id_list = #{welfareIdList,jdbcType=VARCHAR},
      job_id = #{jobId,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      experience_require = #{experienceRequire,jdbcType=VARCHAR},
      age_require = #{ageRequire,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>